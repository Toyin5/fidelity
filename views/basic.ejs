<%- include('partial/plansheader'); -%>
        <form >

          <center>
            <h3>Order Summary:</h3>
            <h6 id="plan"><strong>PRIME</strong></h6>
            <h6><strong>Profit:</strong> 10% every 48 hours </h6>
            <h6><strong>Principal return:</strong> Yes </h6>
            <h6><strong>Minimum deposit:</strong> $50.00 </h6> 
            <h6><strong>Maximum deposit:</strong> $1,500.00 </h6> 
            <h6><strong>Deposit fee:</strong> 0.00% </h6> <br>
            <div class="containerss" style="text-align: center;justify-content: center;padding-top: 20px">
            <h6> Enter Amount($)</h6>
            <textarea id="amountTextArea" name="amount"></textarea> <br><br>
            <h6>Copy wallet address</h6>

            <textarea id="walletTextArea" readonly>bc1qvwrxry6wu7jtk24029wv0u4qferyxzgva88kwl</textarea>
            <br>
            <button id="copyButton">Copy</button> <br><br>
            
            
            <h6>Transaction ID(required):</h6>
            <textarea id="transactionIdTextArea" name="transactionId"></textarea> <br>

            <button id="submitButton">Submit</button> <br><br>

        </form>
    </div><br>
    </div>
  </div>




<!-- footer -->
<footer class="bg--gradient border-top overflow-hidden position-relative" style="background: #3b288f;">
  <!-- <div class="particle"></div>
  <div class="particle2"></div>
  <div class="particle3"></div>
  <div class="particle4"></div> -->
  <div class="footer-top py-5">
      <div class="container" style="align-items: center;justify-content: center;justify-items: center;">
          <center>
          <div class="footer-wrapper flex-wrap" style="width: 20rem;padding: 30px 0;">
              <div class="footer-logo w-100 "></div>
              
                  <a href="https://url">
                      <img src="/ASSETS/WHITE.png" alt="logo" />
                  </a>
              </div> </center>
              <div class="footer-text" style="color: #fff;">
                Discovering your goals is the first step to reaching them. We’ve made it easy to get started. We offer account choices based on your needs. We are backed by a sense of trust and timelessness.
Dependable, Profitable, Timeless
              </div>
              <ul class="footer-link justify-content-left">
                                              <li>
                          <a href="/contact">Support</a>
                      </li>
                                              <!-- <li>
                          <a href="https://url/privacy">Privacy &amp; Policy</a>
                      </li> -->
                                              <li>
                          <a href="/aboutloggedin">About Us</a>
                      </li>
                                      </ul>
              <div class="text--light w-100 mw-100 text-center" style="color: #fff;">
                  COPYRIGHT © 2023. All Rights Reserved By <a href="/homeloggedin">Eternal Trading Co.</a>                    </div>
          </div>
      </div>
  </div>
</footer>

<!-- footer -->





<style>
  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');

  body{
    font-family: 'Quicksand', sans-serif;
  }
  .container {
    text-align: center;
  }

  
        #walletTextArea {
          width: 300px;
          height: 30px;
          resize: none;
        }
        #amountTextArea {
          width: 300px;
          height: 30px;
          resize: none;
        }
        #transactionIdTextArea {
          width: 300px;
          height: 30px;
          resize: none;
        }
        #copyButton {
          padding: 10px 20px;
          /* border: 2px solid gold; */
          background-color: gold;
          /* color: #3b288f; */
          border-top-left-radius: 10px;
          border-top-right-radius: 10px;
    
         border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        }

        #copyButton:hover{
            background-color: #3b288f;
            color: whitesmoke;
        }

        #submitButton {
          padding: 10px 20px;
          /* border: 2px solid gold; */
          background-color: gold;
          /* color: #3b288f; */
          border-top-left-radius: 10px;
            border-top-right-radius: 10px;
    
         border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        }

        #submitButton:hover{
            background-color: #3b288f;
            color: whitesmoke;
        }
        .containerss{
          border-top-left-radius: 30px;
          border-top-right-radius: 30px;
          
          border-bottom-left-radius: 30px;
          border-bottom-right-radius: 30px;
          background-color: whitesmoke;
          padding-left: 20px;
          padding-right: 20px;
        }

        @media screen and (max-width: 1200px) {
          .containers .container{
            text-align: left;
          }
        }

      </style>

    <script>
      const walletTextArea = document.getElementById('walletTextArea');
      const copyButton = document.getElementById('copyButton');
      const amountTextArea = document.getElementById('amountTextArea');
      const submitButton = document.getElementById('submitButton');
      const planElement = document.getElementById('plan')


      amountTextArea.addEventListener('input', function (e) {
        e.preventDefault();
        const value = e.target.value;
        // Remove non-numeric characters from the input
        e.target.value = value.replace(/[^0-9]/g, '');
      });
  
      copyButton.addEventListener('click', (e) => {
          e.preventDefault();
          walletTextArea.select();
          document.execCommand('copy');
          window.getSelection().removeAllRanges();
          alert('Copied to clipboard');
      });

      submitButton.addEventListener('click', async (e) => {
        e.preventDefault();
        const plan = planElement ? planElement.textContent.trim() : '';
        const amount = amountTextArea.value.trim();
        const newAmount = parseInt(amount)
        // Check if the amount is within the range
        if (newAmount < 50 || newAmount > 1500) {
          alert('Kindly input an amount between $50 and $1500');
          return;
        }
        const transactionId = transactionIdTextArea.value.trim();


        if (amount === '' || transactionId === '') {
          alert('Please fill in the required fields appropriately.');
        } 

          try {
            const res = await fetch('/api/deposit/payment', {
              method: 'POST',
              body: JSON.stringify({plan, amount: newAmount, transactionId}),
              headers: {
                'Content-Type': 'application/json',
                // 'Authorization': `Bearer ${token}`,
              }
            });

            if (res.ok) {
              const newDeposit = await res.json();
              console.log('Deposit made:', newDeposit);


              // Redirect to the next page or perform other actions...
              window.location.href = '/success'
            }else {
              const errorData = await res.json();
              console.error('Error making deposit:', errorData);
              alert('Error making deposit. Please check your input and try again.');
            }
          } catch (error) {
            console.error('Error making deposit:', error);
            alert('An unexpected error occurred. Please try again later.')
          }
      });


      // // Function to retrieve cookie value by name
      // function getCookie(name) {
      //   const cookies = document.cookie.split(';');
      //   for (const cookie of cookies) {
      //     const [cookieName, cookieValue] = cookie.trim().split('=');
      //     if (cookieName === name) {
      //       return cookieValue;
      //     }
      //   }
      //   return null;
      // }

        // const amountTextArea = document.getElementById('amountTextArea');
        // const transactionIdTextArea = document.getElementById('transactionIdTextArea');
        // //const userIdTextArea = document.getElementById('userIdTextArea');
        // //const createdAtTextArea = document.getElementById('createdAtTextArea');
        // const submitButton = document.getElementById('submitButton');

        // submitButton.addEventListener('click', async () => {
        //   const amount = amountTextArea.value.trim();
        //   const transactionId = transactionIdTextArea.value.trim();
        //   //const userId = userIdTextArea.value.trim();
        //   //const createdAt = createdAtTextArea.value.trim(); // Assuming createdAt is in a valid date format

        //   if (amount === '' || transactionId === '') {
        //     alert('Please fill in all the required fields appropriately.');
        //   } else {
        //     // Retrieve the 'jwt' cookie value
        //     const jwtToken = getCookie('jwt');

        //     // Make a POST request to store the deposit
        //     try {
        //       const response = await fetch('/payment', {
        //         method: 'POST',
        //         headers: {
        //           'Content-Type': 'application/json',
        //           'Authorization': 'Bearer ' + jwtToken,
        //         },
        //         body: JSON.stringify({ amount, transactionId, }),
        //       });

        //       if (response.ok) {
        //         const newDeposit = await response.json();
        //         console.log('Deposit made:', newDeposit);
        //         // Redirect to the next page or perform other actions...
        //       } else {
        //         const errorData = await response.json();
        //         console.error('Error making deposit:', errorData);
        //         alert('Error making deposit. Please check your input and try again.');
        //       }
        //     } catch (error) {
        //       console.error('Error making deposit:', error);
        //       alert('An unexpected error occurred. Please try again later.');
        //     }
        //   }
        // });


    </script>
</body>
</html> 